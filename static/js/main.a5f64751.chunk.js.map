{"version":3,"sources":["component/ExpenseManager.jsx","component/App.js","reportWebVitals.js","index.js"],"names":["ExpenseManager","useState","localStorage","getItem","JSON","parse","arrayData","setArrayData","isEditItem","setIsEditItem","toggleBtn","setToggleBtn","type","name","curr","friend","date","amt","inputData","setInputData","inputEvent","e","target","value","useEffect","setItem","stringify","className","onChange","onClick","newInputData","id","Date","getTime","toLocaleString","map","elem","data","newData","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5f64751.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n    // get data from localStorage\r\n    const getLocalItems = () => {\r\n        let list = localStorage.getItem('List');\r\n        // console.log(list);\r\n\r\n        if(list)\r\n            return JSON.parse(localStorage.getItem('List'));\r\n        else\r\n            return []    \r\n    }\r\n\r\n\r\nconst ExpenseManager = () => {\r\n\r\n    const [arrayData, setArrayData] = useState (getLocalItems());\r\n    const [isEditItem, setIsEditItem] = useState (null)\r\n    const [toggleBtn, setToggleBtn] = useState (true)\r\n    const [inputData, setInputData] = useState ( {\r\n        type:'',\r\n        name:'',\r\n        curr:'',\r\n        friend:'',\r\n        date:'',\r\n        amt:'',\r\n    } )\r\n\r\n    const inputEvent = (e) => {\r\n        setInputData({...inputData, [e.target.name]:e.target.value})\r\n    }\r\n\r\n    const addItem = () => {\r\n        if(toggleBtn) {\r\n            let newInputData = {\r\n                id: new Date().getTime().toLocaleString(),\r\n                ...inputData\r\n            }\r\n            setArrayData([...arrayData, newInputData]);\r\n            setInputData({\r\n                type:'',\r\n                name:'',\r\n                curr:'',\r\n                friend:'',\r\n                date:'',\r\n                amt:'',\r\n            })\r\n        } else {\r\n            setArrayData(\r\n                arrayData.map( (elem) => {\r\n                    if(elem.id === isEditItem)    \r\n                        return {id:isEditItem,...inputData}  \r\n                    \r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleBtn(true);\r\n            setInputData({\r\n                type:'',\r\n                name:'',\r\n                curr:'',\r\n                friend:'',\r\n                date:'',\r\n                amt:'',\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        let newData = arrayData.filter( (elem) => {\r\n            return elem.id !== id\r\n        })\r\n\r\n        setArrayData(newData)\r\n    }\r\n\r\n    const editItem = (data) => {\r\n        // let newEditItem = arrayData.find( (elem) => {\r\n        //     return elem.id === data.id\r\n        // })\r\n        // console.log(newEditItem)\r\n        setIsEditItem(data.id);\r\n        setInputData(data);\r\n        setToggleBtn(false)\r\n        // setArrayData(\r\n        //     arrayData.map( (elem) => {\r\n        //         if(elem.id === isEditItem)\r\n        //         {\r\n        //             return {...elem, inputData}\r\n        //         }\r\n\r\n        //         return elem;\r\n        //     })\r\n        // )\r\n    }\r\n\r\n    // add data to local storage \r\n\r\n    useEffect( () => {\r\n        localStorage.setItem(\"List\",JSON.stringify(arrayData))\r\n    }, [arrayData]);\r\n\r\n    return(\r\n        <>\r\n        <div className=\"container \">\r\n            <h1 className=\"text-center\">Simple Expense Manager Project</h1>\r\n            <div className=\"bg-secondary row p-3\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Type</label>\r\n                        {/* <input type=\"text\" name=\"type\" value={inputData.type} onChange={inputEvent} className=\"form-control\" /> */}\r\n                        <select \r\n                            value={inputData.type} \r\n                            onChange={inputEvent} \r\n                            name=\"type\"\r\n                            // placeholder=\"Please Select the Type\" \r\n                            className=\"form-control\">\r\n                            <option > --choose one</option>\r\n                            <option value=\"Cash\"> CASH </option>\r\n                            <option value=\"Upi\"> UPI</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Name</label>\r\n                        <input type=\"text\" name=\"name\" value={inputData.name} onChange={inputEvent}\r\n                        className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Currency</label>\r\n                        {/* <input type=\"number\" name=\"curr\" value={inputData.curr} onChange={inputEvent}\r\n                        className=\"form-control\" /> */}\r\n                        <select\r\n                            name=\"curr\"\r\n                            value={inputData.curr}\r\n                            onChange={inputEvent} \r\n                            className=\"form-control\">\r\n                                <option > --choose one</option>\r\n                                <option value=\"USD\"> USD </option>\r\n                                <option value=\"RS\"> RS </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Add Friend </label>\r\n                        <input type=\"text\" name=\"friend\" value={inputData.friend} onChange={inputEvent}\r\n                        className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Date</label>\r\n                        <input type=\"date\" name=\"date\" value={inputData.date} onChange={inputEvent}\r\n                        className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-light\">Amount</label>\r\n                        <input type=\"number\" name=\"amt\" value={inputData.amt} onChange={inputEvent}\r\n                        className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                <button className=\"btn btn-outline-light px-5\" onClick={ addItem }> \r\n                    {\r\n                        toggleBtn ? <span> Add A New Expense </span> : <span> Update A Expences </span>\r\n                    }\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"bg-light container-fluid\">\r\n            <table className=\"table table-bordered table-hover text-center table-responsive table-responsive-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Name</th>\r\n                        <th>Friend</th>\r\n                        <th>Date</th>\r\n                        <th>Currency</th>\r\n                        <th>Amount</th>\r\n                        <th>Edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        arrayData.map( (elem) => {\r\n                            return(\r\n                                <tr key={elem.id}>\r\n                                    <td>{elem.type}</td>\r\n                                    <td>{elem.name}</td>\r\n                                    <td>{elem.friend}</td>\r\n                                    <td>{elem.date}</td>\r\n                                    <td>{elem.curr}</td>\r\n                                    <td>{elem.amt}</td>\r\n                                    <td>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                        <span className=\"edit-bg bg-warning\">\r\n                                            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" onClick={ () => {editItem(elem)}} />\r\n                                            {/* <button className=\"btn btn-warning\" onClick={ () => {editItem(elem)}}> Edit </button> */}\r\n                                        </span>\r\n                                    \r\n                                        <span className=\"edit-bg bg-danger\">\r\n                                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"  onClick={ () => deleteItem(elem.id) } />\r\n                                            {/* <button className=\"btn btn-danger\" onClick={ () => deleteItem(elem.id) }> Delete </button> */}\r\n                                        </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default ExpenseManager;","import React from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ExpenseManager from './ExpenseManager';\n\nconst App = () => {\n  return (\n    <>\n      <ExpenseManager />\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}